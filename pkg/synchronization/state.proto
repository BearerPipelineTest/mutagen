syntax = "proto3";

package synchronization;

option go_package = "github.com/mutagen-io/mutagen/pkg/synchronization";

import "synchronization/rsync/receive.proto";
import "synchronization/session.proto";
import "synchronization/core/conflict.proto";
import "synchronization/core/problem.proto";

// Status encodes the status of a synchronization session.
enum Status {
    // Status_Disconnected indicates that the session is unpaused but not
    // currently connected or connecting to either endpoint.
    Disconnected = 0;
    // Status_HaltedOnRootEmptied indicates that the session is halted due to
    // the root emptying safety check.
    HaltedOnRootEmptied = 1;
    // Status_HaltedOnRootDeletion indicates that the session is halted due to
    // the root deletion safety check.
    HaltedOnRootDeletion = 2;
    // Status_HaltedOnRootTypeChange indicates that the session is halted due to
    // the root type change safety check.
    HaltedOnRootTypeChange = 3;
    // Status_ConnectingAlpha indicates that the session is attempting to
    // connect to the alpha endpoint.
    ConnectingAlpha = 4;
    // Status_ConnectingBeta indicates that the session is attempting to connect
    // to the beta endpoint.
    ConnectingBeta = 5;
    // Status_Watching indicates that the session is watching for filesystem
    // changes.
    Watching = 6;
    // Status_Scanning indicates that the session is scanning the filesystem on
    // each endpoint.
    Scanning = 7;
    // Status_WaitingForRescan indicates that the session is waiting to retry
    // scanning after an error during the previous scanning operation.
    WaitingForRescan = 8;
    // Status_Reconciling indicates that the session is performing
    // reconciliation.
    Reconciling = 9;
    // Status_StagingAlpha indicates that the session is staging files on alpha.
    StagingAlpha = 10;
    // Status_StagingBeta indicates that the session is staging files on beta.
    StagingBeta = 11;
    // Status_Transitioning indicates that the session is performing transition
    // operations on each endpoint.
    Transitioning = 12;
    // Status_Saving indicates that the session is recording synchronization
    // history to disk.
    Saving = 13;
}

// State encodes the current state of a synchronization session. It is mutable
// within the context of the daemon, so it should be accessed and modified in a
// synchronized fashion. Outside of the daemon (e.g. when returned via the API),
// it should be considered immutable.
message State {
    // Session is the session metadata. If the session is paused, then the
    // remainder of the fields in this structure should be ignored.
    Session session = 1;
    // Status is the session status.
    Status status = 2;
    // AlphaConnected indicates whether or not the session controller is
    // currently connected to the alpha endpoint.
    bool alphaConnected = 3;
    // BetaConnected indicates whether or not the session controller is
    // currently connected to the beta endpoint.
    bool betaConnected = 4;
    // LastError is the last error to occur during synchronization. It is
    // cleared after a successful synchronization cycle.
    string lastError = 5;
    // SuccessfulSynchronizationCycles is the number of successful
    // synchronization cycles to occur since successfully connecting to the
    // endpoints.
    uint64 successfulSynchronizationCycles = 6;
    // StagingStatus is the rsync-based staging status. It is only set if the
    // session status is Status_StagingAlpha or Status_StagingBeta.
    rsync.ReceiverStatus stagingStatus = 7;
    // AlphaScanProblems is the list of non-terminal problems encountered during
    // scanning on alpha. This list may be a truncated version of the full list
    // if too many problems are encountered to report via the RPC API.
    repeated core.Problem alphaScanProblems = 8;
    // ExcludedAlphaScanProblems is the number of problems that have been
    // excluded from AlphaScanProblems due to truncation. This value can only be
    // non-zero if alphaScanProblems is non-empty.
    uint64 excludedAlphaScanProblems = 9;
    // BetaScanProblems is the list of non-terminal problems encountered during
    // scanning on beta. This list may be a truncated version of the full list
    // if too many problems are encountered to report via the RPC API.
    repeated core.Problem betaScanProblems = 10;
    // ExcludedBetaScanProblems is the number of problems that have been
    // excluded from BetaScanProblems due to truncation. This value can only be
    // non-zero if betaScanProblems is non-empty.
    uint64 excludedBetaScanProblems = 11;
    // Conflicts are the conflicts that identified during reconciliation. This
    // list may be a truncated version of the full list if too many conflicts
    // are encountered to report via the RPC API.
    repeated core.Conflict conflicts = 12;
    // ExcludedConflicts is the number of conflicts that have been excluded from
    // Conflicts due to truncation. This value can only be non-zero if conflicts
    // is non-empty.
    uint64 excludedConflicts = 13;
    // AlphaTransitionProblems is the list of non-terminal problems encountered
    // during transition operations on alpha. This list may be a truncated
    // version of the full list if too many problems are encountered to report
    // via the RPC API.
    repeated core.Problem alphaTransitionProblems = 14;
    // ExcludedAlphaTransitionProblems is the number of problems that have been
    // excluded from AlphaTransitionProblems due to truncation. This value can
    // only be non-zero if alphaTransitionProblems is non-empty.
    uint64 excludedAlphaTransitionProblems = 15;
    // BetaTransitionProblems is the list of non-terminal problems encountered
    // during transition operations on beta. This list may be a truncated
    // version of the full list if too many problems are encountered to report
    // via the RPC API.
    repeated core.Problem betaTransitionProblems = 16;
    // ExcludedBetaTransitionProblems is the number of problems that have been
    // excluded from BetaTransitionProblems due to truncation. This value can
    // only be non-zero if betaTransitionProblems is non-empty.
    uint64 excludedBetaTransitionProblems = 17;
}
